Version=6.8
NumberOfModules=8
Module1=widget
Module2=Starter
Module3=KeyValueStore
Module4=ClsCheckList
Module5=ClsExplorer
Module6=SetAnimation
Module7=loglist
Module8=batt
Build1=cleanerb,com.cleanerb.de
Build2=bcleaner,com.bcleaner
ManifestCode=AddManifestText(~\n~<uses-sdk android:minSdkVersion="8" android:targetSdkVersion="25"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>~\n~android:name="android.permission.KILL_BACKGROUND_PROCESSES"/>~\n~<uses-permission ~\n~android:name="android.launcher.permission.INSTALL_SHORTCUT"/>~\n~<uses-permission ~\n~ android:name="android.permission.CLEAR_APP_CACHE"/>~\n~<uses-permission ~\n~ android:name="android.permission.GET_PACKAGE_SIZE"/>~\n~<uses-permission ~\n~ android:name="android.permission.GET_TASKS"/>~\n~<uses-permission~\n~  android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>~\n~<uses-permission~\n~  android:name="android.permission.READ_EXTERNAL_STORAGE"/>~\n~<uses-permission~\n~  android:name="android.permission.WRITE_SECURE_SETTINGS"/>~\n~<uses-permission~\n~ android:name="android.permission.PACKAGE_USAGE_STATS"/>~\n~<uses-permission~\n~  android:name="android.permission.BATTERY_STATS"/>~\n~<uses-permission~\n~  android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>~\n~<uses-permission~\n~  android:name="android.permission.REQUEST_INSTALL_PACKAGES"/>~\n~<uses-permission~\n~  android:name="android.permission.SET_ALWAYS_FINISH"/>~\n~<uses-permssion~\n~  android:name="android.permission.UPDATE_DEVICE_STATS"/>~\n~<uses-permission~\n~  android:name="android.permission.BIND_APPWIDGET"/> ~\n~<uses-permission~\n~  android:name="android.permission.MANAGE_OWN_CALLS"/>~\n~<uses-permission~\n~  android:name="android.permission.READ_CALL_LOG"/> ~\n~<uses-permission~\n~  android:name="android.permission.READ_PHONE_STATE"/>~\n~<uses-permission ~\n~  android:name="android.permission.READ_SMS"/> ~\n~<uses-permission~\n~  android:name="android.permission.MODIFY_PHONE_STATE"/>~\n~<uses-permission~\n~  android:name="android.permission.REORDER_TASKS"/> ~\n~ )~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~SetApplicationAttribute(android:theme, "@style/Theme.AppCompat")~\n~SetApplicationAttribute(android:theme, "@style/MyAppTheme")~\n~AddApplicationText(<service android:name="com.frozendevs.cache.cleaner.model.CleanerService"/>)~\n~CreateResource(values, theme.xml,~\n~<resources>~\n~    <style name="MyAppTheme" parent="Theme.AppCompat">~\n~        <item name="colorPrimary">#414243</item>~\n~        <item name="colorPrimaryDark">#414243</item>~\n~        <item name="colorAccent">#E3B510</item>~\n~        <item name="windowNoTitle">true</item>~\n~        <item name="windowActionBar">false</item>~\n~    </style>~\n~</resources>~\n~)~\n~'End of default text.~\n~
IconFile=
NumberOfFiles=20
File1=1.bal
File2=3.bal
File3=add-3.png
File4=b.png
File5=cbshadow.png
File6=close_48x48.png
File7=ic_apps_black_18dp.png
File8=ic_apps_white_18dp.png
File9=ic_archive_white_18dp.png
File10=ic_arrow_back_white_18dp.png
File11=ic_arrow_drop_down_circle_white_18dp.png
File12=ic_battery_charging_60_white_18dp.png
File13=ic_battery_charging_80_grey600_18dp.png
File14=ic_developer_mode_white_18dp.png
File15=ic_done_all_white_18dp.png
File16=ic_event_available_white_18dp.png
File17=id-card.png
File18=ta1.bal
File19=ta2.bal
File20=warning_38x38.png
NumberOfLibraries=37
Library1=core
Library2=appcompat
Library3=cachecleaner
Library4=dialogs
Library5=intent id
Library6=numberprogressbar
Library7=progresswheel
Library8=reflection
Library9=scrollview2d
Library10=sql
Library11=phone
Library12=materialcolors
Library13=circlebutton
Library14=xmlsax
Library15=viewanimations
Library16=animation
Library17=randomaccessfile
Library18=xmllayoutbuilder
Library19=javaobject
Library20=materialdialogsv7
Library21=opengl2
Library22=progressrndbtn
Library23=customnotification
Library24=customtoast
Library25=oslibrary
Library26=storage
Library27=mlfiles
Library28=bcmaterial
Library29=archiver
Library30=papershredderview
Library31=msos
Library32=osstats
Library33=arrowdownloadbutton
Library34=betterdialogs
Library35=animationplus
Library36=guislidingsidebar
Library37=icosrotateanimation
@EndOfDesignText@
'Project created by D.Trojan
'published by SuloMedia™ ©2017
#Region  Project Attributes 
	#ApplicationLabel: Bcleaner
	#VersionCode: 24
	#VersionName: 1.8
	#SupportedOrientations: portrait
	#CanInstallToExternalStorage: False
#End Region
'#AdditionalRes:C:\Users\trow\Documents\Apps\Worground\Bcleaner\res
#AdditionalRes:C:\Users\trow\Documents\Apps\Worground\Bcleaner\res1
#AdditionalRes:C:\Users\trow\Documents\Apps\Worground\Bcleaner\res2
#Extends:android.support.v7.app.AppCompatActivity
#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
#End Region

Sub Process_Globals
	Private pak As PackageManager
	Dim t1 As Timer
	Private os As OperatingSystem
	Dim date,time As String
	'Dim cb As CacheCleaner
End Sub

Sub Globals
	Dim args(1) As Object
	Dim Obj1, Obj2, Obj3 As Reflector
	Dim size,flags As Int
	Private name,apath,l,Types(1),packName As String
	Private icon As BitmapDrawable
		Private ac As AppCompat
	'Private Panel1 As Panel
	Private toolbar As ACToolBarLight
	Dim ABHelper As ACActionBar
	Private mcl As MaterialColors
	Private lw3 As ListView
	Private applist,catlist,mathlist As List 

	Private cinfo As CustomDialog
	Dim counter As Int 
	Dim kvst As KeyValueStore
	Dim kvsdata As KeyValueStore
	Dim kvsmat As KeyValueStore
	Private dia As 	AlertDialogBuilder 
	Private dia2 As 	AlertDialogBuilder 
	Private dia3 As 	AlertDialogBuilder 
	Private shader As BitmapDrawable
	Dim draw As JavaObject
	Dim tmp As List
	Private Panel2 As Panel
	Private storage As MLfiles
	Dim app() As Object
	Dim xMSOS As MSOS
	Dim xOSStats As OSStats
	Private piclist As List 
	Dim expan As Panel
	Dim  exdia As CustomDialog
	Dim calllog As CallLog
	Private callist As List 
	Dim AnimPlus As AnimationPlus
	Dim ios As ICOSRotateAnimation
	Private tab1 As TabHost
	Private lv4 As ListView
	Dim bat As batt
	Private sb1 As bcSnackBar
	Private lv5 As ListView
	Private Cbutton As Circlebutton
	Private Label4 As Label
	Private afb1 As ACFlatButton
End Sub

Sub Activity_Create(FirstTime As Boolean)
	Activity.LoadLayout("1")
	'cb.initialize("cb")
	Dim ic,id As Bitmap
	ic=LoadBitmap(File.DirAssets,"ic_arrow_drop_down_circle_white_18dp.png")
	id=LoadBitmap(File.DirAssets,"ic_arrow_back_white_18dp.png")
	toolbar.SetAsActionBar
	toolbar.Elevation=10dip
	toolbar.PopupTheme=toolbar.THEME_LIGHT
	toolbar.Title=pak.GetApplicationLabel("com.cleanerb.de")
	toolbar.SubTitle="Version "&pak.GetVersionName("com.cleanerb.de")
	toolbar.NavigationIconBitmap=id
	toolbar.Color=Colors.ARGB(255,65,66,67)
	piclist.Initialize
	ABHelper.Initialize
	callist.Initialize
	xOSStats.Initialize(400, 50, Me, "myStats")
	os.Initialize("os")
	toolbar.InitMenuListener
	ABHelper.HomeVisible=True
	applist.Initialize
	mathlist.Initialize
	expan.Initialize("expan")
	tmp.Initialize
	catlist.Initialize
	dia.Initialize("dia")
	dia2.Initialize("dia2")
	dia3.Initialize("dia3")
	lw3.Initialize("lw3")
	lw3.Enabled=True
	t1.Initialize("t1",1000)
	t1.Enabled=False
	counter=0
	Activity.TitleColor=mcl.md_black_1000
	Activity.Color=Colors.ARGB(255,65,66,67)
	Activity.AddMenuItem3("Log", "inf", ic,True)
	'Activity.AddMenuItem("Settings","sett")
	Activity.AddMenuItem("System RAM","aps")
	Activity.AddMenuItem("reload","ref")
	Activity.AddMenuItem("About","about")
	'bd2.Initialize(LoadBitmap(File.DirAssets,"close_48x48.png"))
	Activity.AddMenuItem("Exit", "close")
	draw.InitializeNewInstance("android.graphics.Shader",Null)
	Label4.Text="Scan"
	'Label4.Color=mcl.md_black_1000
	Label4.textsize=15
	DateTime.TimeFormat="HH:mm"
	DateTime.DateFormat="dd/MM/yyyy"
	date=DateTime.Date(DateTime.Now)
	time=DateTime.Time(DateTime.Now)
	Cbutton.ButtonColor=mcl.md_amber_600
	Label4.BringToFront
	
	'#####################################Ram whell#######################################
	If FirstTime Then
		 'CallSubDelayed(widget,"remote_start")
		If File.Exists(File.DirInternal,"math.txt") Then
			
		Else
		File.WriteList(File.DirInternal,"math.txt",mathlist)

		End If
	End If
	kvst.Initialize(File.DirInternal,"data_time")
	kvsdata.Initialize(File.DirInternal,"data_data")
	kvsmat.Initialize(File.DirInternal,"data_math")
	ios.InfinityRotateCentre("ios",360,10)
	bat.Initialize
	kvs_read
	tab_one
	tab_two
	'.Text=catlist.Size&" Apps installed"
	For Each r As String  In kvst.ListKeys
		Log(r)
		
		'.Text=kvst.GetSimple(r)&" cache."
	Next
	afb1.BringToFront
	afb1.Text="Cllean"
	afb1.TextSize=12
	afb1.Color=mcl.md_grey_600
	afb1.Gravity=Gravity.CENTER
	afb1.TextColor=mcl.md_white_1000
End Sub

Sub Activity_Resume
	xOSStats.StartStats
	kvs_read
End Sub

Sub Activity_Pause (UserClosed As Boolean)
	t1.Enabled=False
End Sub

Sub Activity_KeyPress (KeyCode As Int) As Boolean 'Return True to consume the event
	If KeyCode=KeyCodes.KEYCODE_BACK Then
		Activity.Finish
		SetAnimation.setanimati("extra_in", "extra_out")
	End If
	Return(True)
End Sub

Sub toolbar_NavigationItemClick
	Activity.Finish
	SetAnimation.setanimati("extra_in", "extra_out")
End Sub

Sub Cbutton_Click
	ProgressDialogShow("Scan for App trash")
	ref_click
End Sub

Sub ref_click
	CallSubDelayed(widget,"remote_start")
End Sub

Sub tab_one
	Dim bati1,bati2 As Bitmap
	bati1=LoadBitmap(File.DirAssets,"ic_apps_black_18dp.png")
	bati2=LoadBitmap(File.DirAssets,"ic_apps_white_18dp.png")
	tab1.AddTabWithIcon("Cleaner Tab:",bati1,bati2,"ta2")
	sb1.Color=mcl.md_amber_600
	sb1.TextColor(mcl.md_black_1000)
	sb1.singleLine(True)
	sb1.actionText("Status: "&bat.BatteryInformation(0)&"%")
	Dim pis1,pis2,pis3 As List
	pis1.Initialize
	pis2.Initialize
	pis3.Initialize
	os.RunningServiceInfo(999,pis1,pis2,pis3)
	sb1.actionText("Proccess: "&pis1.size)
	
	'##########################lv5 Settings#####################################
	Dim l1,l2,l3,l4,l5,l6 As Label
	l1.Initialize("l1")
	l2.Initialize("l2")
	l3.Initialize("l3")
	l4.Initialize("l4")
	l5.Initialize("l5")
	l6.Initialize("l6")
	l6=lv5.SingleLineLayout.Label
	l1.TextColor=mcl.md_amber_600'Colors.ARGB(200,255,255,255)
	l6.TextColor=mcl.md_white_1000'Colors.ARGB(200,255,255,255)
	l1.TextSize=15
	l6.TextSize=15
	l1.Gravity=Gravity.CENTER
	l4=lv5.TwoLinesAndBitmap.Label
	l2.TextColor=Colors.White
	l4.TextColor=Colors.White
	l2.TextSize=15
	l4.TextSize=15
	l3.TextColor=mcl.md_amber_A700
	l5=lv5.TwoLinesAndBitmap.SecondLabel
	l3.TextSize=15
	l5.TextSize=15
	l5.TextColor=mcl.md_blue_500
	lv5.FastScrollEnabled=True
	Return
	
End Sub
Sub lv4_ItemClick (Position As Int, Value As Object)
	For t=0 To catlist.Size-1
		Log(catlist.Get(t))
		packName=catlist.Get(t)
	Next
	If Value=packName Then 
		Dim i As Intent
		i.Initialize("android.content.pm.ApplicationInfo",Value)
		StartActivity(i)
	End If
End Sub

Sub tab_two                                                                                                                                                                                                                                                                                                                                                                                       
	tab1.AddTab("App Manager:","ta1")
	app_list
	Dim l1,l2,l3,l4,l5,l6 As Label
	l1.Initialize("l1")
	l2.Initialize("l2")
	l3.Initialize("l3")
	l4.Initialize("l4")
	l5.Initialize("l5")
	l6.Initialize("l6")
	l6=lv4.SingleLineLayout.Label
	l1.TextColor=mcl.md_light_blue_A700'Colors.ARGB(200,255,255,255)
	l6.TextColor=mcl.md_red_A200'Colors.ARGB(200,255,255,255)
	l1.TextSize=15
	l6.TextSize=15
	l1.Gravity=Gravity.CENTER
	l4=lv4.TwoLinesAndBitmap.Label
	l2.TextColor=Colors.White
	l4.TextColor=Colors.White
	l2.TextSize=15
	l4.TextSize=15
	l3.TextColor=mcl.md_amber_A700
	l5=lv4.TwoLinesAndBitmap.SecondLabel
	l3.TextSize=15
	l5.TextSize=15
	l5.TextColor=mcl.md_blue_500
End Sub

Sub info_set
	ProgressDialogHide
	lv5.Clear
	lv5.FastScrollEnabled=True
	For Each q As String In kvst.ListKeys
	Next
	lv5.AddSingleLine(kvst.GetSimple(q))
	lv5.AddSingleLine(time)
End Sub
Sub button_off
	afb1.Visible=False
End Sub
Sub button_set
	If afb1.Visible=False Then 
		afb1.SetVisibleAnimated(400,True)
		Else 
			If afb1.Visible=True Then 
			afb1.SetVisibleAnimated(400,False)
			End If
	End If
End Sub
Sub but_off
	Label4.Text="Searching.."
	Label4.TextColor=Colors.ARGB(255,65,66,67)
	Label4.SetVisibleAnimated(400,False)
End Sub
Sub but_on
	Label4.text="Scan"
	Label4.TextColor=mcl.md_white_1000
	Label4.SetVisibleAnimated(400,True)
End Sub
Sub afb1_Click
	'os.killBackgroundProcesses("com.cleanerb.de")
	CallSubDelayed(widget,"clean_start")
	but_off
	Activity.Invalidate
End Sub

Sub tab2_refresh
	ProgressDialogHide
	 but_on
	lv5.Clear
	For Each r As String  In kvst.ListKeys
		Log(r)
		'.Text=kvst.GetSimple(r)&" cache."
		Next
		For u=0 To widget.obj.Size-1
			packName=widget.obj.Get(u)
			icon=pak.GetApplicationIcon(widget.obj.Get(u))
		name=pak.GetApplicationLabel(widget.obj.Get(u))
			lv5.AddTwoLinesAndBitmap2(name,"",icon.Bitmap,packName)
			lv5.SetSelection(u)
		Next
	
End Sub
Sub lv5_ItemClick (Position As Int, Value As Object)
	Dim  cd As CustomDialog
	Dim pap As Panel
	pap.Initialize("pap")
	Dim la1,la2,la3 As Label
	la3.Initialize("la3")
	la2.Initialize("la2")
	la1.Initialize("la1")
	pap.AddView(la1,2dip,2dip,95%x,25dip)
	pap.AddView(la2,2dip,27dip,95%x,25dip)
	pap.AddView(la3,2dip,52dip,95%x,25dip)
	cd.AddView(pap,2dip,1dip,99%x,130dip)
	For u=0 To widget.obj.Size-1
		packName=widget.obj.Get(u)
		name=pak.GetApplicationLabel(widget.obj.Get(u))
		icon=pak.GetApplicationIcon(widget.obj.Get(u))
	Next
	Dim total As String
	total = File.Size(GetParentPath(GetSourceDir(GetActivitiesInfo(packName))),GetFileName(GetSourceDir(GetActivitiesInfo(packName))))
	size=total
	la1.Text=packName
	la2.Text=name
	la3.Text=FormatFileSize(size)
		If Value=packName Then
	cd.Show("App Info:","Got It","","Clear All",icon.Bitmap)
	End If 
	If cd.Response=DialogResponse.NEGATIVE Then 
		'os.killBackgroundProcesses("com.cleanerb.de")
		CallSubDelayed(widget,"clean_start")
	End If
	
End Sub

Sub tab1_TabChanged
	
End Sub

Sub tab1_Click
	app_list
	kvs_read
	
End Sub


Sub kvs_read
	Dim exi,ini As Int
	Dim sd,si,exd,inter,mount As String
	sd=storage.Sdcard
	exd=storage.SdcardReady
	inter=os.TotalInternalMemorySize
	exi=os.TotalExternalMemorySize
	mount=storage.SdcardReady
	If exd="mounted" Then
		si=storage.GetExtSd
		'.Text="Intern: "&FormatFileSize(inter)&"/"&FormatFileSize(exi)
		Else 
		'.Text=FormatFileSize(inter)
	End If
End Sub

Sub aps_click
	Dim i As Intent
	i.Initialize("android.intent.action.MANAGE_PACKAGE_STORAGE","")
	StartActivity(i)
End Sub

Sub inf_click
	StartActivity(loglist)
	SetAnimation.setanimati("extra_in", "extra_out")
End Sub

Sub close_click
	ExitApplication
	SetAnimation.setanimati("extra_in", "extra_out")
End Sub

Sub myStats_Update(CPUEfficiency() As Float, RAMUsage As Float)
	sb1.Text("RAM: "&FormatFileSize(RAMUsage*1024*1024*10))
	
End Sub

Sub call_list
	Dim res As Int
	res=InputList(callist,"Call Log:",1)
	If Not (res=DialogResponse.CANCEL) Then
		callist.Clear
	End If
End Sub

Sub app_list
	catlist.Clear
	lv4.Clear
	applist=pak.GetInstalledPackages
	Obj1.Target = Obj1.GetContext
	Obj1.Target = Obj1.RunMethod("getPackageManager") ' PackageManager
	Obj2.Target = Obj1.RunMethod2("getInstalledPackages", 0, "java.lang.int") ' List<PackageInfo>
	size = Obj2.RunMethod("size")
	For i = 0 To size -1
		Obj3.Target = Obj2.RunMethod2("get", i, "java.lang.int") ' PackageInfo
		size = Obj2.RunMethod("size")
		Obj3.Target = Obj3.GetField("applicationInfo") ' ApplicationInfo
		flags = Obj3.GetField("flags")
		packName = Obj3.GetField("packageName")
		If Bit.And(flags, 1)  = 0 Then
			'app is not in the system image
			args(0) = Obj3.Target
			Types(0) = "android.content.pm.ApplicationInfo"
			name = Obj1.RunMethod4("getApplicationLabel", args, Types)
			icon = Obj1.RunMethod4("getApplicationIcon", args, Types)
			Dim total As String
			total = File.Size(GetParentPath(GetSourceDir(GetActivitiesInfo(packName))),GetFileName(GetSourceDir(GetActivitiesInfo(packName))))
			lv4.AddTwoLinesAndBitmap2(name,packName&" | "&FormatFileSize(total),icon.Bitmap,packName)
			catlist.Add(packName)
		End If
	Next
End Sub


Sub FormatFileSize(Bytes As Float) As String
	Private Unit() As String = Array As String(" Byte", " KB", " MB", " GB", " TB", " PB", " EB", " ZB", " YB")
	If Bytes = 0 Then           
		Return "0 Bytes"
	Else 
		Private Po, Si As Double
		Private I As Int
		Bytes = Abs(Bytes)                    
		I = Floor(Logarithm(Bytes, 1024))
		Po = Power(1024, I)
		Si = Bytes / Po
		Return NumberFormat(Si, 1, 2) & Unit(I)
	End If
End Sub

Sub dia_onCancel()
	Log($"onCancel()"$)
End Sub

Sub dia_onDismiss()
	Log($"onDismiss()"$)
End Sub
Sub dia_onItemClick(index As Int,selected As Boolean)
	Log($"onItemClick(${index},${selected})"$)
End Sub
Sub dia_onKey(key As Int, keyevent As Int)
End Sub

Sub dia2_onClick(Button As Int, index As Int)
	
End Sub

Sub dia2_onDismiss()
	Log($"onDismiss()"$)
End Sub
Sub dia2_onItemClick(index As Int,selected As Boolean)
	Log($"onItemClick(${index},${selected})"$)
End Sub
Sub dia2_onKey(key As Int, keyevent As Int)
End Sub

Sub dia3_onClick(Button As Int, index As Int)
	Log($"onClick()"$)
		
End Sub

Sub dia3_onDismiss()
	Log($"onDismiss()"$)
End Sub
Sub dia3_onItemClick(index As Int,selected As Boolean)
	Log($"onItemClick(${index},${selected})"$)
End Sub
Sub dia3_onKey(key As Int, keyevent As Int)
End Sub

Sub about_click
	Dim ig As BitmapDrawable
	ig.Initialize(LoadBitmap(File.DirAssets,"id-card.png"))
	dia3.setTitle("About "&pak.GetApplicationLabel("com.cleanerb.de")&" - Version "&pak.GetVersionName("com.cleanerb.de")).create
	dia3.setIcon2(ig).create
	dia3.setMessage("Written in Basic by D.Trojan. Published by SuloMedia™").setCancelable(True).setNeutralButton("Ok").show
End Sub

Sub GetFileName(FullPath As String) As String
	Return FullPath.SubString(FullPath.LastIndexOf("/")+1)
End Sub

Sub GetSourceDir(AppInfo As Object) As String
	Try
		Dim r As Reflector
		r.Target = AppInfo
		Return r.GetField("sourceDir")
	Catch
		Return ""
	End Try
End Sub

Sub GetActivitiesInfo(package As String) As Object
	Dim r As Reflector
	r.Target = r.GetContext
	r.Target = r.RunMethod("getPackageManager")
	r.Target = r.RunMethod3("getPackageInfo", package, "java.lang.String", 0x00000001, "java.lang.int")
	Return r.GetField("applicationInfo")
End Sub

Sub GetParentPath(Path As String) As String
	Dim Path1 As String
	If Path = "/" Then
		Return "/"
	End If
	L = Path.LastIndexOf("/")
	If L = Path.Length - 1 Then
		'Strip the last slash
		Path1 = Path.SubString2(0,L)
	Else
		Path1 = Path
	End If
	L = Path.LastIndexOf("/")
	If L = 0 Then
		L = 1
	End If
	Return Path1.SubString2(0,L)
End Sub




